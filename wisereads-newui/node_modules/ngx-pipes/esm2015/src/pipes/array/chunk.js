/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Pipe } from '@angular/core';
import { isString } from '../helpers/helpers';
export class ChunkPipe {
    /**
     * @param {?} input
     * @param {?=} size
     * @return {?}
     */
    transform(input, size = 1) {
        if (isString(input)) {
            return this.chunk(input
                .split(''), size);
        }
        return Array.isArray(input) ? this.chunk(input, size) : input;
    }
    /**
     * @private
     * @param {?} input
     * @param {?} size
     * @return {?}
     */
    chunk(input, size) {
        return Array(Math.ceil(input.length / size))
            .fill([])
            .map((/**
         * @param {?} _
         * @param {?} index
         * @return {?}
         */
        (_, index) => index * size))
            .map((/**
         * @param {?} begin
         * @return {?}
         */
        begin => input.slice(begin, begin + size)));
    }
}
ChunkPipe.decorators = [
    { type: Pipe, args: [{ name: 'chunk' },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2h1bmsuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtcGlwZXMvIiwic291cmNlcyI6WyJzcmMvcGlwZXMvYXJyYXkvY2h1bmsudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBQ3BELE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUc5QyxNQUFNLE9BQU8sU0FBUzs7Ozs7O0lBQ3BCLFNBQVMsQ0FBQyxLQUFVLEVBQUUsT0FBZSxDQUFDO1FBQ3BDLElBQUksUUFBUSxDQUFDLEtBQUssQ0FBQyxFQUFFO1lBQ25CLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLO2lCQUNwQixLQUFLLENBQUMsRUFBRSxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7U0FDckI7UUFFRCxPQUFPLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7SUFDaEUsQ0FBQzs7Ozs7OztJQUVPLEtBQUssQ0FBQyxLQUFZLEVBQUUsSUFBWTtRQUN0QyxPQUFPLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLENBQUM7YUFDekMsSUFBSSxDQUFDLEVBQUUsQ0FBQzthQUNSLEdBQUc7Ozs7O1FBQUMsQ0FBQyxDQUFDLEVBQUUsS0FBSyxFQUFFLEVBQUUsQ0FBQyxLQUFLLEdBQUcsSUFBSSxFQUFDO2FBQy9CLEdBQUc7Ozs7UUFBQyxLQUFLLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLEtBQUssR0FBRyxJQUFJLENBQUMsRUFBQyxDQUFDO0lBQ3BELENBQUM7OztZQWhCRixJQUFJLFNBQUMsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGlwZSwgUGlwZVRyYW5zZm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgaXNTdHJpbmcgfSBmcm9tICcuLi9oZWxwZXJzL2hlbHBlcnMnO1xuXG5AUGlwZSh7IG5hbWU6ICdjaHVuaycgfSlcbmV4cG9ydCBjbGFzcyBDaHVua1BpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcbiAgdHJhbnNmb3JtKGlucHV0OiBhbnksIHNpemU6IG51bWJlciA9IDEpOiBhbnkge1xuICAgIGlmIChpc1N0cmluZyhpbnB1dCkpIHtcbiAgICAgIHJldHVybiB0aGlzLmNodW5rKGlucHV0XG4gICAgICAgIC5zcGxpdCgnJyksIHNpemUpO1xuICAgIH1cblxuICAgIHJldHVybiBBcnJheS5pc0FycmF5KGlucHV0KSA/IHRoaXMuY2h1bmsoaW5wdXQsIHNpemUpIDogaW5wdXQ7XG4gIH1cblxuICBwcml2YXRlIGNodW5rKGlucHV0OiBhbnlbXSwgc2l6ZTogbnVtYmVyKSB7XG4gICAgcmV0dXJuIEFycmF5KE1hdGguY2VpbChpbnB1dC5sZW5ndGggLyBzaXplKSlcbiAgICAgIC5maWxsKFtdKVxuICAgICAgLm1hcCgoXywgaW5kZXgpID0+IGluZGV4ICogc2l6ZSlcbiAgICAgIC5tYXAoYmVnaW4gPT4gaW5wdXQuc2xpY2UoYmVnaW4sIGJlZ2luICsgc2l6ZSkpO1xuICB9XG59XG4iXX0=